// Mocks generated by Mockito 5.4.4 from annotations
// in tweetguess/test/core/services/shake_detection/shake_detection_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:mockito/mockito.dart' as _i1;
import 'package:sensors_plus_platform_interface/src/accelerometer_event.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDateTime_0 extends _i1.SmartFake implements DateTime {
  _FakeDateTime_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AccelerometerEvent].
///
/// See the documentation for Mockito's code generation for more information.
class MockAccelerometerEvent extends _i1.Mock
    implements _i2.AccelerometerEvent {
  @override
  double get x => (super.noSuchMethod(
        Invocation.getter(#x),
        returnValue: 0.0,
        returnValueForMissingStub: 0.0,
      ) as double);

  @override
  double get y => (super.noSuchMethod(
        Invocation.getter(#y),
        returnValue: 0.0,
        returnValueForMissingStub: 0.0,
      ) as double);

  @override
  double get z => (super.noSuchMethod(
        Invocation.getter(#z),
        returnValue: 0.0,
        returnValueForMissingStub: 0.0,
      ) as double);

  @override
  DateTime get timestamp => (super.noSuchMethod(
        Invocation.getter(#timestamp),
        returnValue: _FakeDateTime_0(
          this,
          Invocation.getter(#timestamp),
        ),
        returnValueForMissingStub: _FakeDateTime_0(
          this,
          Invocation.getter(#timestamp),
        ),
      ) as DateTime);
}
